---
title: "National-GHG-Inventory-Tracking"
author: "William F. Lamb"
date: "`r Sys.Date()`"
output: word_document
---

```{r setup, include=FALSE}

knitr::opts_chunk$set(echo = TRUE)

rm(list=ls())
library(openxlsx)
library(tidyverse)
library(countrycode)
library(zoo)
library(ggraph)

load('data/data_crts.RData')
load("data/data_crt_files.RData")
load('data/data_disturbances.RData')

source("https://raw.githubusercontent.com/lambwf/Codebase/main/figure_style.R")


```

``` {r plot_removals,fig.height=3,fig.width=8}

load("data/data_crts_activity_v2.RData")

data <- data_crts_activity %>% 
  filter(str_starts(sector_code, "1.C.2")) %>% 
  filter(iso %in% c("CAN","AUS","NOR"))
  group_by(iso) %>% 
  mutate(include=ifelse(sum(activity)>0,1,0)) %>% 
  filter(include==1) %>% 
  mutate(year=as.numeric(year))

data %>% ggplot(.,aes(x=year,y=e_co2/1000)) +
  geom_path() +
  facet_wrap(.~country,scales="free_y") +
  theme_wl() +
  labs(title="Inventory Sector 1.C.2. CO2 Injection and Storage reporting",
       subtitle="MtCO2/year",
       caption="• Tidy GHG Inventories v0.3") +
  theme(axis.title=element_blank(),plot.caption = element_text(hjust=0))


##

data <- data_crts_activity %>% 
  filter(str_starts(sector_code, "1.B")) %>% 
  group_by(iso)# %>% 
  mutate(include=ifelse(sum(activity)>0,1,0)) %>% 
  filter(include==1) %>% 
  mutate(year=as.numeric(year))


data %>% ggplot(.,aes(x=year,y=e_co2/1000)) +
  geom_path() +
  facet_wrap(.~country,scales="free_y") +
  theme_wl() +
  labs(title="Inventory Sector 1.C.2. CO2 Injection and Storage reporting",
       subtitle="MtCO2/year",
       caption="• Tidy GHG Inventories v0.3") +
  theme(axis.title=element_blank(),plot.caption = element_text(hjust=0))




```


``` {r aus_fires, fig.width=8,fig.height=6}


data <- data_crts %>% 
  filter(value!=0) %>% 
  group_by(across(-one_of("gas","value"))) %>% 
  summarise(value=sum(value,na.rm=T))

data <- data %>% 
  group_by(country,iso,sector_lv1,year) %>% 
  summarise(value=sum(value)/1e6)

data <- rbind(data,data_disturbances %>% 
                group_by(country,iso,sector_lv1=sector,year) %>%
                summarise(value=sum(value,na.rm=T)/1000) %>% 
                mutate(sector_lv1="Natural disturbances on managed land"))



data <- data %>% 
  ungroup() %>% 
  mutate(sector_lv1=as.factor(sector_lv1)) %>% 
  mutate(sector_lv1=fct_relevel(sector_lv1,"Natural disturbances on managed land","Energy","Industrial processes and product use","Agriculture","Land use, land-use change and forestry","Waste"))


data <- data %>%
  filter(iso %in% c("AUS","CAN"))

colors <- c("#ff6048ff","#4f8fcdff","#d6a719ff","#396840ff","#6aad75ff","#818181ff")


p <- data %>% 
  #filter(!grepl("natural disturbances",sector_lv1)) %>% 
  ggplot(.,aes(x=year,y=value,fill=sector_lv1)) + 
  geom_col(color='#252525',linewidth=0.25) +
  #geom_path(data=data %>% filter(grepl("natural disturbances",sector_lv1)),aes(x=year,y=value,group=iso)) +
  facet_wrap(.~country,ncol=1,scales="free_x") +
  theme_wl() +
  scale_fill_manual(values=colors) +
  theme(text = element_text(family = "Liberation Sans"),
        legend.position="right",
        legend.title=element_blank(),
        axis.title = element_blank(),
        axis.ticks = element_line(color="#636363",size=0.25),
        panel.grid.major.x = element_blank(),
        strip.background = element_blank(),
        strip.text = element_text(size=12,color='#636363',hjust=0,face = "bold"),
        panel.border = element_blank(),
        axis.line = element_line(color="#636363",size = 0.25),
        plot.title = element_text(margin = margin(t = 10))) +
  labs(title="National greenhouse gas emissions with natural disturbances included",
       subtitle=expression("MtCO"[2]*"e/yr"),
       caption="⌂ UNFCCC ⌂ Tidy GHG inventories")
p  

ggsave("results/natural_disturbances.png", plot = p, device = "png", width = 8, height = 6)



```


```{r plots, echo=FALSE, fig.height=4,fig.width=7}

# sectors <- read.xlsx("data/cc_inventory_sectors.xlsx") %>% 
#   select(sector_code,sector_tidy)
# 
# data_crts <- left_join(data_crts,sectors,by="sector_code")






colors <- c("#365f90ff", "#4672b3ff", "#659cccff", "#a3d3f7ff", "#6ccac8ff", "#d6a719ff", "#396840ff", "#6aad75ff", "#818181ff")


colors <- c("#365f90ff", "#4672b3ff", "#659cccff", "#a3d3f7ff", "#6ccac8ff", "#e5b82cff", "#4f8455ff", "#6aad75ff", "#818181ff")

colors <- c("#365f90ff", "#4672b3ff", "#659cccff", "#a3d3f7ff", "#6ccac8ff", "#e5b82cff", "#4f8455ff", "#6aad75ff", "#9c82c8ff")





data <- data_crts %>% 
  group_by(country,iso,year,sector_tidy) %>% 
  summarise(value=sum(value,na.rm=T)/1e6) %>% 
  filter(!is.na(sector_tidy))

data <- data %>% 
  mutate(sector_tidy = as.factor(sector_tidy)) %>% 
  mutate(sector_tidy = fct_relevel(sector_tidy,
                                   "Energy: Power",
                                   "Energy: Industry",
                                   "Energy: Transport",
                                   "Energy: Buildings & other",
                                   "Energy: Fuel production",
                                   "Industrial processes",
                                   "Agriculture",
                                   "Land use change",
                                   "Waste"))
countries = unique(data$country)
for (i in 1:length(countries)) {
  
  p <- data %>% 
  filter(country == countries[i]) %>% 
  ggplot(.,aes(x=year,y=value,fill=sector_tidy)) +
  geom_col(color='#252525',linewidth=0.25) +
  theme_wl() + 
  scale_fill_manual(values=colors) +
  theme(text = element_text(family = "Liberation Sans"),
        legend.position="right",
        legend.title=element_blank(),
        axis.title = element_blank(),
        axis.ticks = element_line(color="#636363",size=0.25),
        panel.grid.major.x = element_blank(),
        strip.background = element_blank(),
        strip.text = element_text(size=12,color='#636363',hjust=0,face = "bold"),
        panel.border = element_blank(),
        axis.line = element_line(color="#636363",size = 0.25),
        plot.title = element_text(margin = margin(t = 10))) +
  labs(title=paste0(countries[i]),
       subtitle=expression("Greenhouse gas emissions (MtCO"[2]*"e/yr)"),
       caption="⌂ UNFCCC ⌂ Tidy GHG inventories")

  
  ggsave(paste0("plots/",countries[i],".png"), plot = p, device = "png", width = 8, height = 3.5)

  
}
p



```
