---
title: "crt_plots"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)

rm(list=ls())
library(openxlsx)
library(tidyverse)
library(countrycode)
library(maps)

load("data/data_crts_v1.3.RData")

source("https://raw.githubusercontent.com/lambwf/Codebase/main/figure_style.R")

```

```{r compare_totals}

load("sources/data_crt_files.RData")

files <- data_crts %>% 
  select(iso,country,dir) %>% 
  distinct() %>% 
  mutate(keep=1)

files_crts <- files_crts %>% 
  left_join(.,files,by = join_by(dir, country, iso)) %>% 
  filter(keep==1)



files_crts <- files_crts %>%
  arrange(iso,year_file) %>% 
  group_by(iso,dir) %>% 
  mutate(include=ifelse(year_file==last(year_file),1,0)) %>% 
  filter(include==1)



## get the total GHG emissions from each CRT

data_crts_totals <- data.frame()

for (i in 1:length(files_crts$country)) {
  
  totals <- read.xlsx(xlsxFile = paste0("sources/done/",files_crts$dir[i],"/",files_crts$files[i]),
                       sheet = paste0("Table10s1"),
                       startRow = 8) %>%
    select(var="GREENHOUSE.GAS.SOURCE.AND.SINK.CATEGORIES",matches("^\\d{4}")) %>% 
    rename_with(~ substr(., 1, 4), matches("^\\d{4}")) %>% 
    mutate(units = "ktCO2e") %>% 
    mutate(gas = "ghg")
  
  
  totals <- totals %>% 
    filter(grepl("Total",var)) %>% 
    filter(grepl("net emissions",var)) %>% 
    gather(.,year,total,-var,-units,-gas) %>% 
    mutate(iso=files_crts$iso[i]) %>%
    mutate(year=as.numeric(year)) %>% 
    mutate(total=as.numeric(total)*1000) %>% 
    select(iso,year,total)
  
  data_crts_totals <- bind_rows(data_crts_totals,totals)
    
  
}
  

# do my leaf node emissions sum up to totals in the CRT summaries?

check <- data_crts %>% 
  group_by(iso,country,year) %>% 
  summarise(value=sum(value,na.rm=TRUE))

check <- left_join(check,data_crts_totals,by=join_by(iso,year))

check <- check %>% 
  mutate(difference_abs=value-total) %>% 
  mutate(difference_rel=(difference_abs/value)*100) %>% 
  filter(abs(difference_rel)>0.01)
  


blarg <- data_crts %>% 
  filter(iso=="EU27" & year==2023) %>% 
  group_by(year,sector_lv1) %>% 
  summarise(value=sum(value,na.rm=T)/1000)



```

```{r plots, echo=FALSE, fig.height=3.5,fig.width=8}


#colors <- c("#365f90ff", "#4672b3ff", "#659cccff", "#a3d3f7ff", "#6ccac8ff", "#e5b82cff", "#4f8455ff", "#6aad75ff", "#818181ff")


data_plots <- data_crts %>% 
  left_join(.,read.xlsx("data/cc_inventory_sectors.xlsx",sheet=2) %>% select(sector_code,sector_tidy)) %>% 
  group_by(country,iso,year,sector_tidy) %>% 
  summarise(value=sum(value,na.rm=T)/1e6)

data_plots <- data_plots %>% 
  mutate(sector_tidy = as.factor(sector_tidy)) %>% 
  mutate(sector_tidy = fct_relevel(sector_tidy,
                                   "Energy | Power",
                                   "Energy | Industry",
                                   "Energy | Transport",
                                   "Energy | Buildings & other",
                                   "Energy | Fuel production",
                                   "Industrial processes",
                                   "Agriculture",
                                   "Land use change (LULUCF)",
                                   "Waste"))

countries = unique(data_plots$country)
for (i in 1:length(countries)) {
  
  data <- data_plots %>% 
  filter(country == countries[i])
  
  total <- data %>% 
    group_by(year) %>% 
    summarise(value=sum(value))
  
  p <- data %>% 
  ggplot(.,aes(x=year,y=value,fill=sector_tidy)) +
  geom_col(color='#252525',linewidth=0.25,width=1) +
  geom_path(data=total,inherit.aes = FALSE,aes(x=year,y=value),size=1,colour='#252525') +
  geom_point(data=total,inherit.aes = FALSE,aes(x=year,y=value),size=1.75,shape=21,fill="white",colour='#252525') +
  theme_wl_bar_trend() + 
  scale_fill_manual(values=colours_9_sectors) +
  scale_x_continuous(limits=c(1989,max(data_plots$year)+1),
                       expand = expansion(mult = c(0.01, 0.01)),
                     breaks=c(1990,2000,2010,max(data_plots$year))) +
  theme(axis.title = element_blank()) +
  labs(title=paste0(countries[i]),
       subtitle=expression("Greenhouse gas emissions inventory (MtCO"[2]*"e/yr)"),
       caption="⌂ UNFCCC   ⌂ Tidy GHG inventories   ⌂ GWP100 AR5   ⌂ CC-BY William F. Lamb")

  
  ggsave(paste0("plots/countries/",countries[i],".png"), plot = p, device = "png", dpi = 300, width = 8, height = 4)
  ggsave(paste0("plots/countries/",countries[i],".pdf"), plot = p, device = cairo_pdf, width = 8, height = 4)
  ggsave(paste0("plots/countries/",countries[i],".svg"), plot = p, device = "svg", width = 8, height = 4)

  data <- data %>% 
    mutate(units="MtCO2e (GWP100 AR5)") %>% 
    select(country,iso,sector=sector_tidy,year,units,value)
  
  
  ## Save data
  
  wb <- createWorkbook()
  addWorksheet(wb,"info")
  addWorksheet(wb,"data")
  info = data.frame(a=c("Author","Contact","Data sources","See also"),
                    b=c("William F. Lamb",
                        "william.lamb@pik-potsdam.de",
                        "Lamb, W. F. (2025). Tidy GHG Inventories (1.0) [Data set]. Zenodo. https://doi.org/10.5281/zenodo.14945466",
                        "https://doi.org/10.5281/zenodo.14512139"))
  
  writeData(wb, sheet = "info",info,colNames = F, rowNames = F)
  writeData(wb, sheet = "data",data,colNames = T, rowNames = F)
  
  saveWorkbook(wb,paste0("plots/countries/plot data/",countries[i],".xlsx"),overwrite=T)
  
  
}


```

```{r plot_changes, echo=FALSE, fig.height=3.5,fig.width=7}


load("sources/data_crt_files.RData")

files <- files_crts %>% 
  select(iso,country,dir,year_submission) %>% 
  distinct() %>% 
  mutate(file=paste0(country,"_",year_submission))

files <- files %>% 
  group_by(iso) %>% 
  mutate(no_versions=n()) %>% 
  filter(no_versions>1)

## Compile

data_compare <- data.frame()

for (i in 1:length(files$file)) {
  
  temp_env <- new.env()
  load(paste0("sources/compiled/",files$file[i],".RData"), envir = temp_env)

  data_compare <- rbind(data_compare,temp_env$data)

}


data_plots <- data_compare %>% 
  group_by(country,iso,year,year_submission) %>% 
  summarise(value=sum(value,na.rm=TRUE)/1e6)

countries = unique(data_plots$country)


for (i in 1:length(countries)) {
  
  data <- data_plots %>% 
  filter(country == countries[i])
  
  
  p <- data %>% 
  ggplot(.,aes(x=year,y=value,colour=year_submission)) +
  geom_path(size=1) +
  geom_point(size=1.75,shape=21,fill="white") +
  theme_wl_bar_trend() + 
  scale_colour_manual(values=c("#ff9055ff","#659cccff")) +
  scale_x_continuous(limits=c(1989,max(data_plots$year)+1),
                       expand = expansion(mult = c(0.01, 0.01)),
                     breaks=c(1990,2000,2010,max(data_plots$year))) +
  scale_y_continuous(limits = c(0, NA)) +
  
  theme(axis.title = element_blank()) +
  labs(title=paste0(countries[i]),
       subtitle=expression("Greenhouse gas emissions inventory (MtCO"[2]*"e/yr)"),
       caption="⌂ UNFCCC   ⌂ Tidy GHG inventories   ⌂ GWP100 AR5   ⌂ CC-BY William F. Lamb")

  # p2 <- data %>% 
  #   group_by(year_submission) %>% 
  #   summarise(value=last(value)) %>% 
  # ggplot(.,aes(x=1,y=value,colour=year_submission,label=year_submission)) +
  # geom_text_repel(
  #   hjust=0,
  #   direction = "y",
  #   point.size = NA,
  #   size=3.5,
  #   show.legend = FALSE,
  #   min.segment.length = Inf,
  #   box.padding = 0.2,
  #   force = 0.1) +
  # scale_colour_manual(values=colours_gases) +
  # scale_x_continuous(expand = expansion(mult = c(0, 0.05))) +
  #   scale_y_continuous(limits = c(0, NA)) +
  # theme_wl_empty()
  # 
  # plot <- p1 + p2 + plot_layout(widths=c(5,1.55))
  # plot

  
  ggsave(paste0("plots/countries/versions/",countries[i],"-versions.png"), plot = p, device = "png", dpi = 300, width = 7, height = 4)
  ggsave(paste0("plots/countries/versions/",countries[i],"-versions.pdf"), plot = p, device = cairo_pdf, width = 7, height = 4)
  ggsave(paste0("plots/countries/versions/",countries[i],"-versions.svg"), plot = p, device = "svg", width = 7, height = 4)
  


  
}



```




``` {r compare_versions}

current_version <- read.xlsx("data/Tidy-GHG-Inventories-v1.3-long.xlsx",sheet=2)
last_version <- read.xlsx("data/Tidy-GHG-Inventories-v1.1-long.xlsx",sheet=2)

compare <- current_version %>% 
  group_by(iso,country,year) %>% 
  summarise(value_current=sum(value,na.rm=T))

compare <- compare %>% 
  left_join(.,last_version %>% 
  group_by(iso,country,year) %>% 
  summarise(value_last=sum(value,na.rm=T)),by = join_by(iso, country, year))

compare <- compare %>% 
  mutate(uhoh=ifelse(value_current!=value_last,1,0)) %>% 
  filter(uhoh==1)

```

```{r map,echo=FALSE,warning=FALSE,dpi=300,fig.height=4}



## Get map data and clean up iso codes

map <- map_data("world") %>% filter(region!="Antarctica")
map <- map %>% 
  left_join(.,map %>% 
              select(region) %>% 
              distinct() %>% 
              mutate(iso=countrycode(region,"country.name","iso3c")),
            by=join_by(region))


## Get a list of countries that have complete inventories

country_list <- data_crts %>% 
  group_by(iso,country,year) %>% 
  summarise(value=sum(value,na.rm=T)) %>% 
  group_by(iso,country) %>% 
  mutate(n=n())

country_list <- country_list %>% 
  ungroup() %>% 
  mutate(coverage=ifelse(n>=33,"Submitted,\ndata from 1990-2022","Submitted,\npartial data up to 2022")) %>% 
  select(iso,country,n,coverage) %>% 
  distinct()


## Join to map data

map <- map %>% left_join(.,country_list,by=join_by(iso))
map <- map %>% mutate(coverage=ifelse(is.na(coverage),"Not submitted or\nnon-standard format",coverage))


## Fix greenland
map <- map %>% mutate(coverage=ifelse(region=="Greenland","Submitted,\ndata from 1990-2022",coverage))


## Arrange factors, get date

map$coverage <- as.factor(map$coverage)
map$coverage <- fct_relevel(map$coverage,"Submitted,\ndata from 1990-2022","Submitted,\npartial data up to 2022","Not submitted / non-standard format")

Sys.setlocale("LC_TIME", "en_US.UTF-8")
current_date <- paste0("Submissions up to ",format(Sys.Date(), "%B %d, %Y"))
current_date <- str_wrap(current_date,width=20)

## Plot

p <- ggplot() + 
  geom_polygon(data = map, aes(x=long, y = lat, group=group, fill=coverage),color="#636363",size=0.2,na.rm=T) + 
  #coord_fixed(1,xlim=c(-120,70),ylim=c(0,70)) +
  scale_fill_manual(values= c("Submitted,\ndata from 1990-2022"="#7dd396ff",
                              "Submitted,\npartial data up to 2022"="#659cccff",
                              "Not submitted or\nnon-standard format"='#818181ff')) +
  theme_wl_empty() +
  theme(legend.position = c(0.14, 0.2),
        panel.border = element_rect(colour = "#636363",fill=NA),
        legend.title=element_text(size=10),
        legend.text=element_text(size=8)) +
  labs(subtitle = paste0("GHG inventory submissions under the latest Biennial Transparency Reports"),
       caption = "⌂ Data: UNFCCC, Tidy GHG inventories   ⌂ CC-BY William F. Lamb \n",
       fill=current_date)
p  


ggsave(paste0("plots/map-coverage.png"), plot = p, device = "png", dpi = 300, height = 4)
ggsave(paste0("plots/map-coverage.pdf"), plot = p, device = cairo_pdf, height = 4)
ggsave(paste0("plots/map-coverage.svg"), plot = p, device = "svg", height = 4)

## Data file for EGR
data_map <- map %>% 
  select(region,iso,coverage) %>% 
  distinct()


## Save data

wb <- createWorkbook()
addWorksheet(wb,"info")
addWorksheet(wb,"data")
info = data.frame(a=c("Author","Contact","Data sources","See also"),
                  b=c("William F. Lamb",
                      "william.lamb@pik-potsdam.de","Tidy GHG Inventories v1.3 (https://zenodo.org/records/15673746)","https://lambwf.github.io/UNEP-Gap-Report-2025-Chapter-2/"))

writeData(wb, sheet = "info",info,colNames = F, rowNames = F)
writeData(wb, sheet = "data",data_map,
          colNames = T, rowNames = F)

saveWorkbook(wb,paste0("plots/map-data.xlsx"),overwrite=T)





## Total countries
length(country_list$coverage)

## Total complete CRTs
length(country_list$iso[country_list$coverage=="Submitted,\ndata from 1990-2022"])

## No. LDCs/SIDS with CRTs
country_list <- country_list %>% 
  left_join(.,read.csv("https://raw.githubusercontent.com/openclimatedata/countrygroups/refs/heads/main/data/ldc.csv") %>% 
  select(iso=Code) %>% 
  mutate(LDC=1))

country_list <- country_list %>% 
  left_join(.,read.csv("https://raw.githubusercontent.com/openclimatedata/countrygroups/refs/heads/main/data/sids.csv") %>% 
  select(iso=Code) %>% 
  mutate(SIDS=1))

country_list <- country_list %>% 
  mutate(LDCs_SIDS=ifelse(!is.na(LDC),1,NA)) %>% 
  mutate(LDCs_SIDS=ifelse(!is.na(SIDS),1,LDCs_SIDS))

length(country_list$iso[!is.na(country_list$LDCs_SIDS)])


```

``` {r compare_PRIMAP,fig.width=8,fig.height=10}

## compare to PRIMAP Hist-CR

data_primap <- read.csv("../GHG-Emissions-Assessment/sources/PRIMAP/Guetschow_et_al_2025-PRIMAP-hist_v2.6.1_final_no_rounding_13-Mar-2025.csv")
data_primap <- gather(data_primap,year,value,X1750:X2023)
data_primap$year <- gsub("X","",data_primap$year)
names(data_primap) <- c("source","scenario","provenance","area","gas","unit","category","year","value") 

data_primap <- data_primap %>% 
  filter(scenario=="HISTCR") %>% 
  filter(category %in% c("0")) %>% 
  filter(gas=="KYOTOGHG (AR4GWP100)") %>% 
  mutate(year=as.numeric(year)) %>% 
  mutate(area=ifelse(area=="EU27BX","EU27",area)) %>% 
  mutate(value=value*1000)

check_primap <- data_crts %>% 
  group_by(iso,country,year) %>% 
  summarise(value=sum(value,na.rm=TRUE)) %>% 
  left_join(.,data_primap %>% select(year,value_primap=value,iso=area))
  
check_primap %>% 
  filter(year==2022) %>% 
  gather(.,dataset,value,value,value_primap) %>% 
  ggplot(.,aes(x=value,y=country,color=dataset)) +
  geom_point()


```