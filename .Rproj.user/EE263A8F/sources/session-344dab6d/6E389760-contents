---
title: "read_crt_activity_data"
output: html_document
date: "`r Sys.Date()`"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)

rm(list=ls())
library(openxlsx)
library(tidyverse)
library(countrycode)
library(zoo)


## download files from https://unfccc.int/ghg-inventories-annex-i-parties/2024
# run scan_files.R

load("data/data_crt_files.RData")

```


```{r get_activity_data_energy_fuelcombustion}

i=1
data_crts_activity <- data.frame()


for (i in 1:length(files_crts$country)) {
  
  table_1 <- read.xlsx(xlsxFile = paste0("sources/CRTs/",files_crts$dir[i],"/",files_crts$files[i]),
                       sheet = paste0("Table1.A(a)s1"),
                       startRow = 7)
  
  table_2 <- read.xlsx(xlsxFile = paste0("sources/CRTs/",files_crts$dir[i],"/",files_crts$files[i]),
                       sheet = paste0("Table1.A(a)s2"),
                       startRow = 7)
  
  table_3 <- read.xlsx(xlsxFile = paste0("sources/CRTs/",files_crts$dir[i],"/",files_crts$files[i]),
                       sheet = paste0("Table1.A(a)s3"),
                       startRow = 7) %>% mutate(blarg=NA)
  
  table_4 <- read.xlsx(xlsxFile = paste0("sources/CRTs/",files_crts$dir[i],"/",files_crts$files[i]),
                       sheet = paste0("Table1.A(a)s4"),
                       startRow = 7)
  
  
  names(table_1) <- c("sector","activity","X3","ef_co2","ef_ch4","ef_n2o","e_co2","e_ch4","e_n2o","captured_co2")
  names(table_2) <- c("sector","activity","X3","ef_co2","ef_ch4","ef_n2o","e_co2","e_ch4","e_n2o","captured_co2")
  names(table_3) <- c("sector","activity","X3","ef_co2","ef_ch4","ef_n2o","e_co2","e_ch4","e_n2o","captured_co2")
  names(table_4) <- c("sector","activity","X3","ef_co2","ef_ch4","ef_n2o","e_co2","e_ch4","e_n2o","captured_co2")
  
  
  table_1 <- table_1 %>% 
    select(-X3) %>% 
    mutate(activity_unit="Energy consumption (TJ)") %>% 
    select(sector,activity_unit,everything()) %>% 
    filter(!is.na(sector)) %>% 
    filter(!grepl("Note:",sector))
  
  table_2 <- table_2 %>% 
    select(-X3) %>% 
    mutate(activity_unit="Energy consumption (TJ)") %>% 
    select(sector,activity_unit,everything()) %>% 
    filter(!is.na(sector)) %>% 
    filter(!grepl("Note:",sector))
  
  table_3 <- table_3 %>% 
    select(-X3) %>% 
    mutate(activity_unit="Energy consumption (TJ)") %>% 
    select(sector,activity_unit,everything()) %>% 
    filter(!is.na(sector)) %>% 
    filter(!grepl("Note:",sector))
  
  table_4 <- table_4 %>% 
    select(-X3) %>% 
    mutate(activity_unit="Energy consumption (TJ)") %>% 
    select(sector,activity_unit,everything()) %>% 
    filter(!is.na(sector)) %>% 
    filter(!grepl("Note:",sector))
  
  
  ## remove footnotes
  table_4 <- table_4 %>% mutate(remove=ifelse(grepl("Information item",sector),"yes",NA))
  table_4$remove <- na.locf(table_4$remove,na.rm=FALSE)
  table_4 <- table_4 %>% 
    filter(is.na(remove)) %>% 
    select(-remove)
  
  
  ## join tables
  table <- bind_rows(table_1,table_2,table_3,table_4)
  
  
  ## clean
  table <- table %>% 
    filter(!grepl("Drop-down list:",sector))
    
  
  ## extract and propagate sector codes
  table <- table %>% 
    mutate(fuel = ifelse(str_detect(sector, "^[^0-9]"), sector, NA)) %>% 
    mutate(sector = ifelse(str_detect(sector, "^[^0-9]"), NA, sector))
  
  table <- table %>% 
    mutate(sector_code=sub("^(\\S+)\\s.*", "\\1", sector))
  
  table <- table %>% 
    mutate(sector_code=ifelse(grepl("^[0-9]",sector_code),sector_code,NA))
  
  table$sector_code <- na.locf(table$sector_code)
  
  table <- table %>% 
    mutate(sector=ifelse(grepl("^[0-9]",sector),sub("^\\S+\\s(.*)", "\\1", sector),sector))
  
  table$sector <- na.locf(table$sector)
  
  table <- table %>% 
    select(sector_code,sector,fuel,everything())
  
  
  ## Clean up fuels
  table <- table %>% 
    mutate(fuel=ifelse(is.na(fuel),"Total",fuel))
  
  # delete other fuels (please specify) rows, as they already have child rows
  table <- table %>% 
    filter(!grepl("please specify",fuel))
  
  
  ## remove spaces at the beginning of categories
  table$sector <- gsub("^\\s+", "", table$sector)
  
  
  ## deal with NA, NO, IE, NE and convert to numeric
  table <- table %>% 
    mutate(across(c(activity,ef_co2,ef_ch4,ef_n2o,e_co2,e_ch4,e_n2o,captured_co2), ~ if_else(.x == "NO", "0", .x))) %>% 
    mutate(across(c(activity,ef_co2,ef_ch4,ef_n2o,e_co2,e_ch4,e_n2o,captured_co2), ~ na_if(.x, "IE"))) %>% 
    mutate(across(c(activity,ef_co2,ef_ch4,ef_n2o,e_co2,e_ch4,e_n2o,captured_co2), ~ na_if(.x, "NA"))) %>% 
    mutate(across(c(activity,ef_co2,ef_ch4,ef_n2o,e_co2,e_ch4,e_n2o,captured_co2), ~ na_if(.x, "NE"))) %>% 
    mutate(across(c(activity,ef_co2,ef_ch4,ef_n2o,e_co2,e_ch4,e_n2o,captured_co2), as.numeric))
  
  
  ## extract the emissions hierarchy (just the level associated with each sector)
  table <- table %>%
    mutate(sector_level = map_int(sector_code, ~ sum(str_split(.x, "\\.")[[1]] != "")))
  
  
  ## join country and year
  table <- table %>% 
    mutate(iso=files_crts$iso[i]) %>% 
    mutate(country=files_crts$country[i]) %>% 
    mutate(year=files_crts$file_year[i])
  
  
  ## organise and join
  table <- table %>% 
    select(iso,country,sector_code,sector_level,sector,fuel,year,everything()) 
  
  
  data_crts_activity <- bind_rows(data_crts_activity,table)
  
}


```

``` {r clean_energy_fuelcombustion_data}

data <- data_crts_activity

## remove trailing spaces in sector descriptions, text within round brackets
data$sector <- gsub("\\(.*?\\)", "", data$sector)
data$sector <- gsub("\\s+$", "", data$sector)
data$fuel <- gsub("\\(.*?\\)", "", data$fuel)
data$fuel <- gsub("\\s+$", "", data$fuel)


## identify leaf nodes
sectors <- data %>% select(sector_code,sector_level,sector,fuel) %>% distinct()
sectors <- sectors %>%
  mutate(is_leaf = !sapply(sector_code, function(code) {
    any(str_detect(setdiff(sector_code, code), paste0("^", str_replace_all(code, "\\.", "\\\\."))))
  }))


## "Total" fuel estimates are not leaf nodes, unless they have no child fuels
sectors <- sectors %>% 
  group_by(sector_code,sector_level,sector) %>% 
  mutate(n=n()) %>% 
  mutate(is_leaf=ifelse(fuel=="Total" & n!=1,FALSE,is_leaf)) %>% 
  select(-n) %>% 
  ungroup()


## propagate sector_lv1
sectors <- sectors %>% 
  mutate(sector_lv1="Energy")


## propagate sector_lv2
sectors <- sectors %>% 
  mutate(match = substr(sector_code,1,3)) %>% 
  left_join(.,sectors %>% 
              filter(sector_level==2) %>%
              mutate(match=substr(sector_code,1,3)) %>% 
              select(match,sector_lv2=sector) %>% 
              distinct(),
            by = join_by(match)) %>% 
  select(-match)


## propagate sector_lv3
sectors <- sectors %>% 
  mutate(match = substr(sector_code,1,5)) %>% 
  left_join(.,sectors %>% 
              filter(sector_level==3) %>%
              mutate(match=substr(sector_code,1,5)) %>% 
              select(match,sector_lv3=sector) %>% 
              distinct(),
            by = join_by(match)) %>% 
  select(-match)


## propagate sector_lv4
sectors <- sectors %>% 
  mutate(match = substr(sector_code,1,8)) %>% 
  left_join(.,sectors %>% 
              filter(sector_level==4) %>%
              mutate(match=substr(sector_code,1,8)) %>% 
              select(match,sector_lv4=sector) %>% 
              distinct(),
            by = join_by(match)) %>% 
  select(-match)




## clean up sectors (no double counting, all codes separate)
sectors <- sectors %>% 
  filter(is_leaf==TRUE) %>%
  select(-is_leaf)


## rejoin
data <- left_join(data,sectors,by=join_by(sector_code,sector_level,sector,fuel))
data_crts_totals <- data %>% filter(is.na(sector_lv1))


## tidy up sector hierarchy
data <- data %>% filter(!is.na(sector_lv1))

data_crts_activity <- data
save(data_crts_activity,file="data/data_crts_activity.RData")


```



```{r get_activity_data_industry}


for (i in 1:length(files_crts$country)) {
  
  table_1 <- read.xlsx(xlsxFile = paste0("sources/CRTs/",files_crts$dir[i],"/",files_crts$files[i]),
                       sheet = paste0("Table2(I).A-H"),
                       startRow = 7)
  
  
  names(table_1) <- c("category","activity_unit","activity","ef_co2","ef_ch4","ef_n2o","e_co2","e_ch4","e_n2o","captured_co2","captured_co2b","captured_ch4","captured_n2o")
  
  
  table_1 <- table_1 %>% 
    mutate(activity_unit=ifelse(!is.na(activity_unit),paste0(activity_unit," (kt)"),activity_unit)) %>% 
    select(category,activity_unit,everything()) %>% 
    filter(!is.na(category)) %>%
    filter(category!="SINK CATEGORIES")
  
  
  ## remove footnotes starting with "(1) ..."
  table_1 <- table_1 %>% 
    mutate(remove=NA) %>% 
    mutate(remove=ifelse(grepl("^\\(1\\)",category),"yes",NA))
  table_1$remove <- na.locf(table_1$remove,na.rm=FALSE)
  table_1 <- table_1 %>% 
    filter(is.na(remove)) %>% 
    select(-remove)
  
  
  ## extract category codes
  table <- table_1 %>% 
    mutate(category_code=sub("^(\\S+)\\s.*", "\\1", category)) %>% 
    mutate(category=sub("^\\S+\\s(.*)", "\\1", category)) %>% 
    mutate(category_code=ifelse(grepl("^[^0-9]",category_code),NA,category_code)) %>% 
    mutate(temp=na.locf(category_code)) %>% 
    mutate(category_code=ifelse(is.na(category_code),paste0(temp,"i"),category_code)) %>% 
    select(-temp)
  
  
  ## fix a typo where some descriptions are joined to the category_code
  table$category_code <- gsub("Other","",table$category_code)
  
  
  ## remove spaces at the beginning of categories
  table$category <- gsub("^\\s+", "", table$category)
  
  
  ## replace "NO"s with zeros (also what does IE mean?)
  
  
  ## extract the emissions hierarchy (just the level associated with each category)
  table <- table %>%
    mutate(category_level = map_int(category_code, ~ sum(str_split(.x, "\\.")[[1]] != "")))
  
  
  ## join country and year
  table <- table %>% 
    mutate(iso=files_crts$country[i]) %>% 
    mutate(year=files_crts$file_year[i])
  
  
  ## organise
  table <- table %>% 
    select(iso,category_code,category_level,category_description=category,year,everything()) 
  
  
  data_crts_activity <- bind_rows(data_crts_activity,table)
  
}


```

```{r get_activity_data_agriculture}

for (i in 1:length(files_crts$country)) {
  
  table_1 <- read.xlsx(xlsxFile = paste0("sources/CRTs/",files_crts$dir[i],"/",files_crts$files[i]),
                       sheet = paste0("Table2(I).A-H"),
                       startRow = 7)
  
  
  names(table_1) <- c("category","activity_unit","activity","ef_co2","ef_ch4","ef_n2o","e_co2","e_ch4","e_n2o","captured_co2","captured_co2b","captured_ch4","captured_n2o")
  
  
  table_1 <- table_1 %>% 
    mutate(activity_unit=ifelse(!is.na(activity_unit),paste0(activity_unit," (kt)"),activity_unit)) %>% 
    select(category,activity_unit,everything()) %>% 
    filter(!is.na(category)) %>%
    filter(category!="SINK CATEGORIES")
  
  
  ## remove footnotes starting with "(1) ..."
  table_1 <- table_1 %>% 
    mutate(remove=NA) %>% 
    mutate(remove=ifelse(grepl("^\\(1\\)",category),"yes",NA))
  table_1$remove <- na.locf(table_1$remove,na.rm=FALSE)
  table_1 <- table_1 %>% 
    filter(is.na(remove)) %>% 
    select(-remove)
  
  
  ## extract category codes
  table <- table_1 %>% 
    mutate(category_code=sub("^(\\S+)\\s.*", "\\1", category)) %>% 
    mutate(category=sub("^\\S+\\s(.*)", "\\1", category)) %>% 
    mutate(category_code=ifelse(grepl("^[^0-9]",category_code),NA,category_code)) %>% 
    mutate(temp=na.locf(category_code)) %>% 
    mutate(category_code=ifelse(is.na(category_code),paste0(temp,"i"),category_code)) %>% 
    select(-temp)
  
  
  ## fix a typo where some descriptions are joined to the category_code
  table$category_code <- gsub("Other","",table$category_code)
  
  
  ## remove spaces at the beginning of categories
  table$category <- gsub("^\\s+", "", table$category)
  
  
  ## replace "NO"s with zeros (also what does IE mean?)
  
  
  ## extract the emissions hierarchy (just the level associated with each category)
  table <- table %>%
    mutate(category_level = map_int(category_code, ~ sum(str_split(.x, "\\.")[[1]] != "")))
  
  
  ## join country and year
  table <- table %>% 
    mutate(iso=files_crts$country[i]) %>% 
    mutate(year=files_crts$file_year[i])
  
  
  ## organise
  table <- table %>% 
    select(iso,category_code,category_level,category_description=category,year,everything()) 
  
  
  data_crts_activity <- bind_rows(data_crts_activity,table)
  
}

```

```{r clean_hierarchy}

# blarg <- table %>% select(category_code,category_level,category_description) %>% distinct()
# for (i in 1:max(blarg$category_level)) {
#   
#   column_name <- paste0("level_", i+1)
#   blarg <- blarg %>% mutate(!!column_name := substr(category_code, 1, i + 2))
#   
#   
# }

```
