mutate(units = "ktCH4e") %>%
mutate(gas = "ch4") %>%
mutate(across(matches("^\\d{4}$"), as.character))
table_4 <- read.xlsx(xlsxFile = paste0("sources/CRTs/",files_crts$dir[i],"/",files_crts$files[i]),
sheet = paste0("Table10s4"),
startRow = 8) %>%
select("GREENHOUSE.GAS.SOURCE.AND.SINK.CATEGORIES",matches("^\\d{4}")) %>%
rename_with(~ substr(., 1, 4), matches("^\\d{4}")) %>%
mutate(units = "ktN2O") %>%
mutate(gas = "n2o") %>%
mutate(across(matches("^\\d{4}$"), as.character))
table_5 <- read.xlsx(xlsxFile = paste0("sources/CRTs/",files_crts$dir[i],"/",files_crts$files[i]),
sheet = paste0("Table10s5"),
startRow = 8) %>%
select("GREENHOUSE.GAS.SOURCE.AND.SINK.CATEGORIES",matches("^\\d{4}")) %>%
rename_with(~ substr(., 1, 4), matches("^\\d{4}")) %>%
mutate(units = "ktCO2e") %>%
mutate(gas = "fgases") %>%
mutate(across(matches("^\\d{4}$"), as.character))
table_6 <- read.xlsx(xlsxFile = paste0("sources/CRTs/",files_crts$dir[i],"/",files_crts$files[i]),
sheet = paste0("Table10s6"),
startRow = 8) %>%
select("GREENHOUSE.GAS.EMISSIONS.AND.REMOVALS",matches("^\\d{4}")) %>%
rename_with(~ substr(., 1, 4), matches("^\\d{4}")) %>%
mutate(units = "ktCO2e") %>%
mutate(gas = "totals") %>%
mutate(across(matches("^\\d{4}$"), as.character))
## fix up f-gas table
table_5 <- table_5 %>%
mutate(gas=GREENHOUSE.GAS.SOURCE.AND.SINK.CATEGORIES) %>%
mutate(GREENHOUSE.GAS.SOURCE.AND.SINK.CATEGORIES="2.F. Product uses as substitutes for ODS")
table_5 <- table_5 %>%
filter(gas %in% c("Emissions of HFCs -  CO2 equivalents (kt) (3)",
"Emissions of PFCs -  CO2 equivalents (kt) ",
"Emissions of  SF6 -  CO2 equivalents (kt) (3)",
"Emissions of NF3 - CO2 equivalents (kt) (3)",
"Unspecified mix of  HFCs and PFCs - CO2 equivalents (kt) (3)")) %>%
mutate(gas=ifelse(grepl("Unspecified",gas),"hfcs/pfcs (unspecified)",gas)) %>%
mutate(gas=ifelse(grepl("HFCs",gas),"hfcs",gas)) %>%
mutate(gas=ifelse(grepl("PFCs",gas),"pfcs",gas)) %>%
mutate(gas=ifelse(grepl("SF6",gas),"sf6",gas)) %>%
mutate(gas=ifelse(grepl("NF3",gas),"nf3",gas))
## merge co2, ch4, n2o, fgases
table <- bind_rows(table_2,table_3,table_4,table_5)
table <- table %>%
select(sector=GREENHOUSE.GAS.SOURCE.AND.SINK.CATEGORIES,gas,units,everything()) %>%
filter(!is.na(sector)) %>%
filter(!grepl("Note:",sector))
table <- gather(table,year,value,-sector,-gas,-units)
## deal with NA, NO, IE, NE
table <- table %>%
mutate(value=ifelse(grepl("NA",value),NA,value)) %>% #
mutate(value=ifelse(grepl("IE",value),NA,value)) %>% # Indicated elsewhere
mutate(value=ifelse(grepl("NE",value),NA,value)) %>% # Not estimated
mutate(value=ifelse(grepl("NO",value),0,value)) # Not occurring
## extract sector codes
table <- table %>%
mutate(sector_code=sub("^(\\S+)\\s.*", "\\1", sector)) %>%
mutate(sector=sub("^\\S+\\s(.*)", "\\1", sector))
## remove spaces at the beginning of categories
table$sector <- gsub("^\\s+", "", table$sector)
## extract the emissions hierarchy (just the level associated with each sector)
table <- table %>%
mutate(sector_level = map_int(sector_code, ~ sum(str_split(.x, "\\.")[[1]] != "")))
## remove memo items etc.
memos <- table %>%
filter(grepl("1.D.",sector_code) | grepl("5.F.1.",sector_code))
table <- table %>%
filter(!sector_code %in% c("Memo","Indirect","Total")) %>%
filter(!grepl("1.D.",sector_code)) %>%
filter(!grepl("5.F.1.",sector_code))
## clean up
table <- table %>%
mutate(country=files_crts$country[i]) %>%
mutate(iso=files_crts$iso[i]) %>%
select(iso,country,sector_code,sector_description=sector,sector_level,gas,units,year,value) %>%
mutate(value=as.numeric(value)) %>%
mutate(year=as.numeric(year))
memos <- memos %>%
mutate(country=files_crts$country[i]) %>%
mutate(iso=files_crts$iso[i]) %>%
select(country,iso,sector_code,sector_description=sector,sector_level,gas,units,year,value) %>%
mutate(value=as.numeric(value)) %>%
mutate(year=as.numeric(year))
## bind to dataset
data_crts <- bind_rows(data_crts,table)
data_memos <- bind_rows(data_memos,memos)
}
## put emissions into a clean format with no double counting and organised sectors
data <- data_crts %>%
arrange(iso,country,sector_code,sector_description,sector_level,gas,units,year)
## remove trailing spaces in sector descriptions, text within round brackets
data$sector_description <- gsub("\\s+$", "", data$sector_description)
data$sector_code <- gsub("\\s+$", "", data$sector_code)
data$sector_description <- gsub("\\(.*?\\)", "", data$sector_description)
data$sector_description[data$sector_description=="Land use, land-use change and forestry "] <-
"Land use, land-use change and forestry"
## fix Ecuador biomass burning issue (they renamed the 4.H. Other sector
data <- data %>%
mutate(sector_description=ifelse(sector_description=="Biomass burning" & sector_code=="4.H.","Other",sector_description))
## identify leaf nodes
sectors <- data %>% select(sector_code,sector_level,sector_description) %>% distinct()
sectors <- sectors %>%
mutate(is_leaf = !sapply(sector_code, function(code) {
any(str_detect(setdiff(sector_code, code), paste0("^", str_replace_all(code, "\\.", "\\\\."))))
}))
## propagate sector_lv1
sectors <- sectors %>%
mutate(match = substr(sector_code,1,1)) %>%
left_join(.,sectors %>%
filter(sector_level==1) %>%
mutate(match=substr(sector_code,1,1)) %>%
select(match,sector_lv1=sector_description),
by = join_by(match)) %>%
select(-match)
## propagate sector_lv2
sectors <- sectors %>%
mutate(match = substr(sector_code,1,3)) %>%
left_join(.,sectors %>%
filter(sector_level==2) %>%
mutate(match=substr(sector_code,1,3)) %>%
select(match,sector_lv2=sector_description),
by = join_by(match)) %>%
select(-match)
## clean up sectors
sectors <- sectors %>%
filter(is_leaf==TRUE) %>%
mutate(sector_lv2=ifelse(sector_lv2=="Other",paste0(sector_lv2," (",sector_lv1,")"),sector_lv2)) %>%
mutate(sector_lv2=ifelse(is.na(sector_lv2),sector_lv1,sector_lv2)) %>%
mutate(sector_lv3=sector_description) %>%
mutate(sector_lv3=ifelse(sector_lv3=="Other",paste0(sector_lv3," (",sector_lv1,")"),sector_lv3)) %>%
select(-sector_description)
## rejoin
data <- left_join(data,sectors,by=join_by(sector_code,sector_level))
#### check that different levels in the hierarchy add up
## calculate totals in non-leaf nodes
data_totals <- data %>%
filter(is.na(is_leaf)) %>%
group_by(iso,country,sector_code,sector_description,sector_level,gas,units,year) %>%
summarise(value_totals=sum(value,na.rm=TRUE))
## are totals correct at lv2?
data_test <- data %>%
filter(is_leaf==TRUE) %>%
group_by(iso,country,sector_lv2,gas,units,year) %>%
summarise(value=sum(value,na.rm=TRUE))
data_test <- left_join(data_test %>% rename(sector_description=sector_lv2),data_totals) %>%
filter(!is.na(value_totals))
data_test <- data_test %>%
mutate(difference_abs = value_totals-value) %>%
mutate(difference_rel = (difference_abs/value_totals)*100) %>%
filter(abs(difference_rel)>0.1)
## are totals correct at lv1?
data_test <- data %>%
filter(is_leaf==TRUE) %>%
group_by(iso,country,sector_lv1,gas,units,year) %>%
summarise(value=sum(value,na.rm=TRUE))
data_test <- left_join(data_test %>% rename(sector_description=sector_lv1),data_totals) %>%
filter(!is.na(value_totals))
data_test <- data_test %>%
mutate(difference_abs = value_totals-value) %>%
mutate(difference_rel = (difference_abs/value_totals)*100) %>%
filter(abs(difference_rel)>0.01)
## some countries report direct and indirect emissions from N inputs to unspecified managed soils in Table 4(I)
## but they only add these to the LULUCF totals (sector 4) and not the underlying sectors (4A-4H)
## therefore we create a residual category to capture these and join it
data_residual <- data_test %>%
filter(gas=="n2o") %>%
mutate(sector_code="4.X.") %>%
mutate(is_leaf="TRUE") %>%
mutate(sector_lv1="Land use, land-use change and forestry") %>%
mutate(sector_lv2="Other (N from unspecified managed soils)") %>%
mutate(sector_lv3="Other (N from unspecified managed soils)") %>%
mutate(sector_description="Other (N from unspecified managed soils)") %>%
mutate(sector_level=2) %>%
select(iso,country,sector_code,sector_description,sector_level,gas,units,year,value=difference_abs,is_leaf,sector_lv1,sector_lv2,sector_lv3)
data <- rbind(data,data_residual)
sectors <- rbind(sectors,data_residual %>% ungroup() %>%
select(sector_code,sector_level,is_leaf,sector_lv1,sector_lv2,sector_lv3) %>% distinct()) %>%
arrange(sector_code)
sectors_full <- data %>% select(sector_code,sector_description,sector_level) %>% distinct() %>% arrange(sector_code)
## tidy up sector hierarchy
data <- data %>% filter(!is.na(sector_lv1))
## Merge countries in the EU
data_eu <- data %>%
left_join(.,read.csv("https://raw.githubusercontent.com/openclimatedata/countrygroups/main/data/european-union.csv") %>%
select(iso=Code) %>%
mutate(EU="EU27"),by=join_by(iso)) %>%
filter(EU=="EU27")
data_eu <- data_eu %>%
mutate(iso=EU) %>%
mutate(country="European Union") %>%
select(-EU) %>%
group_by(across(!all_of("value"))) %>%
summarise(value=sum(value,na.rm=TRUE))
data <- rbind(data,data_eu)
## remove years with only NA data (e.g. China 1990)
data <- data %>%
group_by(iso,year) %>%
mutate(year_total=sum(value,na.rm=T)) %>%
ungroup()
warning <- data %>%
filter(year_total==0) %>%
select(country,year) %>%
distinct()
for (i in 1:length(warning$country)) {
print(paste0("Warning: ",warning$country[i]," in year ",warning$year[i]," removed due to null values"))
}
data <- data %>%
filter(year_total!=0) %>%
select(-year_total)
## join AR5 GWPs
gwps <- read.csv("https://raw.githubusercontent.com/openclimatedata/globalwarmingpotentials/main/globalwarmingpotentials.csv",skip = 10) %>% select(gas=Species,gwp100_ar5=AR5GWP100) %>% mutate(gas=tolower(gas))
data <- data %>% left_join(.,gwps,by="gas")
data_memos <- data_memos %>% left_join(.,gwps,by="gas")
data <- data %>%
mutate(gwp100_ar5=ifelse(!gas %in% c("ch4","n2o"),1,gwp100_ar5)) %>%
mutate(value_gwp100=value*gwp100_ar5)
data_memos <- data_memos %>%
mutate(gwp100_ar5=ifelse(!gas %in% c("ch4","n2o"),1,gwp100_ar5)) %>%
mutate(value_gwp100=value*gwp100_ar5)
## check units are in kt and convert to t
data <- data %>%
{if (any(!str_starts(.$units, "kt"))) stop("Error: Not all values in the 'units' column start with 'kt'")
else .
} %>%
mutate(value_gwp100 = value_gwp100 * 1000)
data_memos <- data_memos %>%
{if (any(!str_starts(.$units, "kt"))) stop("Error: Not all values in the 'units' column start with 'kt'")
else .
} %>%
mutate(value_gwp100 = value_gwp100 * 1000)
data <- data %>%
mutate(units="tCO2e (GWP100 AR5)") %>%
select(-gwp100_ar5,-value) %>%
rename(value=value_gwp100)
data_memos <- data_memos %>%
mutate(units="tCO2e (GWP100 AR5)") %>%
select(-gwp100_ar5,-value) %>%
rename(value=value_gwp100)
## set levels and arrange
data <- data %>%
mutate(gas=as.factor(gas)) %>%
mutate(gas=fct_relevel(gas,"co2","ch4","n2o","hfcs","pfcs","nf3","sf6","hfcs/pfcs (unspecified)"))
data_memos <- data_memos %>%
mutate(gas=as.factor(gas)) %>%
mutate(gas=fct_relevel(gas,"co2","ch4","n2o"))
## tidy up file
data <- data %>%
filter(!is.na(sector_lv1)) %>%
select(country,iso,sector_code,sector_level,sector_lv1,sector_lv2,sector_lv3,gas,units,year,value)
data_memos <- data_memos %>%
select(country,iso,sector_code,sector_level,sector=sector_description,gas,units,year,value)
data <- data %>% arrange(across(-ncol(data)))
data_memos <- data_memos %>% arrange(across(-ncol(data_memos)))
############ version
version = "1.0"
data_crts <- data
save(data_crts,data_memos,file="data/data_crts.RData")
wb_long <- createWorkbook()
addWorksheet(wb_long,"info")
addWorksheet(wb_long,"data")
addWorksheet(wb_long,"memos")
addWorksheet(wb_long,"sectors")
addWorksheet(wb_long,"countries")
info = data.frame(a=c("Title",
"Author",
"Contact",
"General description",
"Sector description",
"Memos",
"Global warming potentials",
"Country coverage",
"Last update",
"Link to code",
"Citation"),
b=c(paste0("Tidy GHG Inventories v",version),
"William F. Lamb",
"lamb@mcc-berlin.net",
"This data file is a compilation of national greenhouse gas emissions (GHG) inventories, sourced from the Common Reporting Tables (CRTs) that countries submit to the UNFCCC. The CRTs themselves require significant manipulation before one can begin any data analysis. The objective of this dataset is therefore to put the national inventories into a tidy, consistent format that better suits user needs. I sourced the original CRT files from the UNFCCC (e.g. https://unfccc.int/ghg-inventories-annex-i-parties/2024; https://unfccc.int/first-biennial-transparency-reports) and reformatted their summary reports into a single tidy, structured data table.",
"Emissions are split into sectors as set out by the Intergovernmental Panel on Climate Change (IPCC) Task Force on National Greenhouse Gas Inventories (TFI). The six main sectors are (1) Energy, (2) Industrial processes and product use, (3) Agriculture, (4) Land use, land-use change and forestry, (5) Waste, and (6) Other. A general description of the sectors is available in the TFI guidance. In this data file the first five high level sectors are split into 41 individual categories, which is the most detailed level of reporting provided in the CRT summary sheets. I have included only the data from 'leaf nodes' in the sector hierarchy, which are sectors that have no further child sectors. This means that you can safely sum up all sectors for each country without double counting. The higher level sector categories are provided as variables for convenient aggregation. The 'sector' tab of the spreadsheet shows which sectors are included and how they fit into the TFI hierarchy.",
"Countries report certain memo items in their inventories, but do not account these in the totals. Currently they include items like international bunker fuels, military operations and CO2 storage. These can be found in the separate Memo tab. Note that the full hierarchy is included here, so double counting is possible.",
"Countries report emissions from CO2, CH4, N2O and F-gases (HFCs, PFCs, NF3, SF6). I have converted emissions from the different gases to CO2 equivalents using global warming potentials with a 100 year time horizon from the IPCC 5th Assessment Report (GWP100 AR5). More recent GWP100 values have been published in the IPCC AR6, but I have not yet figured out if it is possible to extract F-gases from every CRT in original units, which would be necessary to update the values. CH4 and N2O can be reconverted into their original units by dividing by 28 and 265, respectively.",
"Currently only Annex I countries consistently submit CRTs each year. Non-Annex I countries submit at irregular intervals, although this may change. Recently there have also been significant delays in submissions as as countries move to the new reporting format. The full list of countries covered and associated files is in the 'countries' tab of the spreadsheet.",
paste0(Sys.Date()),
"https://github.com/lambwf/Tidy-GHG-Inventories/blob/main/read_crts.Rmd",
paste0("Lamb, W. F. (2024). Tidy GHG Inventories (",version,") [Data set]. Zenodo. https://doi.org/10.5281/zenodo.14576123")))
sector_summary <- left_join(sectors_full,sectors) %>%
mutate(sector_description=paste0(sector_code," ",sector_description)) %>%
mutate(sector_description=ifelse(sector_level>1,paste0("   ",sector_description),sector_description)) %>%
mutate(sector_description=ifelse(sector_level>2,paste0("   ",sector_description),sector_description)) %>%
mutate(`included in data tab?`=ifelse(is.na(sector_lv1),"excluded","included")) %>%
select(sector_code,sector_description,sector_level,sector_lv1,sector_lv2,sector_lv3,is_leaf,`included in data tab?`)
country_summary <- files_crts %>%
ungroup() %>%
select(country,iso,file=files) %>%
add_row(country="European Union",iso="EU27",file="Underlying national CRTs") %>%
arrange(country) %>%
mutate(units="MtCO2e (GWP100 AR5)")
country_years <- data_crts %>%
group_by(iso,year) %>%
summarise(value=sum(value,na.rm=TRUE)/1e6) %>%
mutate(value=ifelse(value==0,NA,value)) %>%
spread(.,year,value)
country_summary <- left_join(country_summary,country_years,by="iso")
writeData(wb_long, sheet = "info", info, colNames = F, rowNames = F)
writeData(wb_long, sheet = "data", data_crts, colNames = T, rowNames = F)
writeData(wb_long, sheet = "memos", data_memos, colNames = T, rowNames = F)
writeData(wb_long, sheet = "sectors", sector_summary, colNames = T, rowNames = F)
writeData(wb_long, sheet = "countries", country_summary, colNames = T, rowNames = F)
textStyle <- createStyle(fontSize = 11, wrapText = TRUE, valign = "top", halign = "left")
addStyle(wb_long, "info", textStyle, rows = 1:nrow(info), cols = 1:2, gridExpand = TRUE)
addStyle(wb_long, "data",createStyle(numFmt= "0"),rows=1:nrow(data_crts),cols=which(names(data_crts)=="year"))
addStyle(wb_long, "memos",createStyle(numFmt= "0"),rows=1:nrow(data_memos),cols=which(names(data_memos)=="year"))
addStyle(wb_long, "countries", createStyle(numFmt= "0"), cols = 1:ncol(country_summary), rows = 2:(nrow(country_summary) + 1), gridExpand = TRUE)
addStyle(wb_long, "sectors", createStyle(textDecoration = "bold"), rows = which(is.na(sector_summary$is_leaf) | sector_summary$sector_level==1) +1,
cols=which(names(sector_summary)=="sector_description"), gridExpand = TRUE)
setColWidths(wb_long, "info", cols = 1, widths = 20)
setColWidths(wb_long, "info", cols = 2, widths = 200)
setColWidths(wb_long, "data", cols = 1:ncol(data_crts), widths = "auto")
setColWidths(wb_long, "data", cols=which(names(data_crts)=="iso"), widths = 5)
setColWidths(wb_long, "data", cols=which(names(data_crts)=="year"), widths = 8)
setColWidths(wb_long, "memos", cols = 1:ncol(data_memos), widths = "auto")
setColWidths(wb_long, "memos", cols=which(names(data_memos)=="iso"), widths = 5)
setColWidths(wb_long, "memos", cols=which(names(data_memos)=="year"), widths = 8)
setColWidths(wb_long, "sectors", cols = 1:ncol(sector_summary), widths = "auto")
setColWidths(wb_long, "countries", cols = 1:ncol(country_summary), widths = "auto")
setColWidths(wb_long, "countries", cols=which(names(country_summary)=="iso"), widths = 5)
setColWidths(wb_long, "countries", cols=which(names(country_summary)=="units"), widths = 21)
saveWorkbook(wb_long,paste0("data/Tidy-GHG-Inventories-v",version,"-long.xlsx"),overwrite=T)
############ wide version
wb_wide <- createWorkbook()
addWorksheet(wb_wide,"info")
addWorksheet(wb_wide,"data")
addWorksheet(wb_wide,"memos")
addWorksheet(wb_wide,"countries")
info = data.frame(a=c("Title",
"Author",
"Contact",
"General description",
"Sector description",
"Memos",
"Global warming potentials",
"Country coverage",
"Last update",
"Link to code",
"Citation"),
b=c(paste0("Tidy GHG Inventories v",version),
"William F. Lamb",
"lamb@mcc-berlin.net",
"This data file is a compilation of national greenhouse gas emissions (GHG) inventories, sourced from the Common Reporting Tables (CRTs) that countries submit to the UNFCCC. The CRTs themselves require significant manipulation before one can begin any data analysis. The objective of this dataset is therefore to put the national inventories into a tidy, consistent format that better suits user needs. I sourced the original CRT files from the UNFCCC (e.g. https://unfccc.int/ghg-inventories-annex-i-parties/2024; https://unfccc.int/first-biennial-transparency-reports) and reformatted their summary reports into a single tidy, structured data table.",
"Emissions are split into sectors as set out by the Intergovernmental Panel on Climate Change (IPCC) Task Force on National Greenhouse Gas Inventories (TFI). The six main sectors are (1) Energy, (2) Industrial processes and product use, (3) Agriculture, (4) Land use, land-use change and forestry, (5) Waste, and (6) Other. A general description of the sectors is available in the TFI guidance. In this data file the first five high level sectors are split into 41 individual categories, which is the most detailed level of reporting provided in the CRT summary sheets. I have included only the data from 'leaf nodes' in the sector hierarchy, which are sectors that have no further child sectors. This means that you can safely sum up all sectors for each country without double counting. The higher level sector categories are provided as variables for convenient aggregation.",
"Countries report certain memo items in their inventories, but do not account these in the totals. Currently they include items like international bunker fuels, military operations and CO2 storage. These can be found in the separate Memo tab. Note that the full hierarchy is included here, so double counting is possible.",
"Countries report emissions from CO2, CH4, N2O and F-gases (HFCs, PFCs, NF3, SF6). I have converted emissions from the different gases to CO2 equivalents using global warming potentials with a 100 year time horizon from the IPCC 5th Assessment Report (GWP100 AR5). More recent GWP100 values have been published in the IPCC AR6, but I have not yet figured out if it is possible to extract F-gases from every CRT in original units, which would be necessary to update the values. CH4 and N2O can be reconverted into their original units by dividing by 28 and 265, respectively.",
"Currently only Annex I countries consistently submit CRTs each year. Non-Annex I countries submit at irregular intervals, although this may change. Recently there have also been significant delays in submissions as as countries move to the new reporting format. The full list of countries covered and associated files is in the 'countries' tab of the spreadsheet.",
paste0(Sys.Date()),
"https://github.com/lambwf/Tidy-GHG-Inventories/blob/main/read_crts.Rmd",
paste0("Lamb, W. F. (2024). Tidy GHG Inventories (",version,") [Data set]. Zenodo. https://doi.org/10.5281/zenodo.14576123")))
data_crts_wide <- data.frame()
for (i in 1:length(files_crts$iso)) {
temp <- left_join(sector_summary,data_crts %>%
filter(iso==files_crts$iso[i]) %>%
spread(.,year,value),
by = join_by(sector_code, sector_level, sector_lv1, sector_lv2, sector_lv3))
if (all(is.na(temp$iso))) {
}
else {
temp <- temp %>%
mutate(iso=na.locf(iso,fromLast=T)) %>%
mutate(country=na.locf(country,fromLast=T))
data_crts_wide <- bind_rows(temp,data_crts_wide)
}
}
data_crts_wide <- data_crts_wide %>%
mutate(sector_code=as.factor(sector_code)) %>%
mutate(sector_code=fct_inorder(sector_code)) %>%
select(-is_leaf,-`included in data tab?`) %>%
select(country,iso,everything()) %>%
select(country:units,
sort(select(., starts_with("20") | starts_with("19")) %>% names())) %>%
arrange(country,iso,sector_code)
writeData(wb_wide, sheet = "info", info, colNames = F, rowNames = F)
writeData(wb_wide, sheet = "data", data_crts_wide, colNames = T, rowNames = F)
writeData(wb_wide, sheet = "memos", data_memos %>% spread(.,year,value), colNames = T, rowNames = F)
writeData(wb_wide, sheet = "countries", country_summary, colNames = T, rowNames = F)
textStyle <- createStyle(fontSize = 11, wrapText = TRUE, valign = "top", halign = "left")
addStyle(wb_wide, "info", textStyle, rows = 1:nrow(info), cols = 1:2, gridExpand = TRUE)
addStyle(wb_wide, "data",createStyle(numFmt= "0"),rows=1:nrow(data_crts),cols=which(names(data_crts)=="year"))
addStyle(wb_wide, "memos",createStyle(numFmt= "0"),rows=1:nrow(data_memos),cols=which(names(data_memos)=="year"))
addStyle(wb_wide, "countries", createStyle(numFmt= "0"), cols = 1:ncol(country_summary), rows = 2:(nrow(country_summary) + 1), gridExpand = TRUE)
addStyle(wb_wide, "data", createStyle(textDecoration = "bold"), rows = which(is.na(data_crts_wide$sector_lv1)) +1,
cols=which(names(data_crts_wide)=="sector_description"), gridExpand = TRUE)
setColWidths(wb_wide, "info", cols = 1, widths = 20)
setColWidths(wb_wide, "info", cols = 2, widths = 200)
setColWidths(wb_wide, "data", cols = 1:ncol(data_crts), widths = "auto")
setColWidths(wb_wide, "data", cols=which(names(data_crts)=="iso"), widths = 5)
setColWidths(wb_wide, "memos", cols = 1:ncol(data_memos), widths = "auto")
setColWidths(wb_wide, "memos", cols=which(names(data_memos)=="iso"), widths = 5)
setColWidths(wb_wide, "countries", cols = 1:ncol(country_summary), widths = "auto")
setColWidths(wb_wide, "countries", cols=which(names(country_summary)=="iso"), widths = 5)
setColWidths(wb_wide, "countries", cols=which(names(country_summary)=="units"), widths = 21)
saveWorkbook(wb_wide,paste0("data/Tidy-GHG-Inventories-v",version,"-wide.xlsx"),overwrite=T)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(openxlsx)
library(tidyverse)
library(countrycode)
library(maps)
load("data/data_crts.RData")
source("https://raw.githubusercontent.com/lambwf/Codebase/main/figure_style.R")
data_plots <- data_crts %>%
left_join(.,read.xlsx("data/cc_inventory_sectors.xlsx") %>% select(sector_code,sector_tidy)) %>%
group_by(country,iso,year,sector_tidy) %>%
summarise(value=sum(value,na.rm=T)/1e6)
data_plots <- data_plots %>%
mutate(sector_tidy = as.factor(sector_tidy)) %>%
mutate(sector_tidy = fct_relevel(sector_tidy,
"Energy | Power",
"Energy | Industry",
"Energy | Transport",
"Energy | Buildings & other",
"Energy | Fuel production",
"Industrial processes",
"Agriculture",
"Land use change (LULUCF)",
"Waste"))
countries = unique(data_plots$country)
i=1
data <- data_plots %>%
filter(country == countries[i])
p <- data %>%
ggplot(.,aes(x=year,y=value,fill=sector_tidy)) +
geom_col(color='#252525',linewidth=0.25,width=1) +
theme_wl_bar_trend() +
scale_fill_manual(values=colours_9_sectors) +
scale_x_continuous(limits=c(1989,max(data_plots$year)+1),
expand = expansion(mult = c(0.01, 0.01)),
breaks=c(1990,2000,2010,max(data_plots$year))) +
theme(axis.title = element_blank()) +
labs(title=paste0(countries[i]),
subtitle=expression("Greenhouse gas emissions inventory (MtCO"[2]*"e/yr)"),
caption="⌂ UNFCCC   ⌂ Tidy GHG inventories   ⌂ CC-BY William F. Lamb")
View(data)
data <- data %>%
mutate(units="MtCO2e (GWP100 AR5)")
View(data)
data <- data %>%
mutate(units="MtCO2e (GWP100 AR5)") %>%
select(country,iso,sector=sector_tidy,year,units,value)
countries[i]
wb <- createWorkbook()
addWorksheet(wb,"info")
addWorksheet(wb,"data")
info = data.frame(a=c("Author","Contact","Data sources","See also"),
b=c("William F. Lamb",
"william.lamb@pik-potsdam.de",
"Lamb, W. F. (2025). Tidy GHG Inventories (1.0) [Data set]. Zenodo. https://doi.org/10.5281/zenodo.14945466",
"https://doi.org/10.5281/zenodo.14512139"))
writeData(wb, sheet = "info",info,colNames = F, rowNames = F)
writeData(wb, sheet = "data",data,colNames = T, rowNames = F)
saveWorkbook(wb,paste0("plots/countries/plot data/",countries[i],".xlsx"),overwrite=T)
#colors <- c("#365f90ff", "#4672b3ff", "#659cccff", "#a3d3f7ff", "#6ccac8ff", "#e5b82cff", "#4f8455ff", "#6aad75ff", "#818181ff")
data_plots <- data_crts %>%
left_join(.,read.xlsx("data/cc_inventory_sectors.xlsx") %>% select(sector_code,sector_tidy)) %>%
group_by(country,iso,year,sector_tidy) %>%
summarise(value=sum(value,na.rm=T)/1e6)
data_plots <- data_plots %>%
mutate(sector_tidy = as.factor(sector_tidy)) %>%
mutate(sector_tidy = fct_relevel(sector_tidy,
"Energy | Power",
"Energy | Industry",
"Energy | Transport",
"Energy | Buildings & other",
"Energy | Fuel production",
"Industrial processes",
"Agriculture",
"Land use change (LULUCF)",
"Waste"))
countries = unique(data_plots$country)
for (i in 1:length(countries)) {
data <- data_plots %>%
filter(country == countries[i])
p <- data %>%
ggplot(.,aes(x=year,y=value,fill=sector_tidy)) +
geom_col(color='#252525',linewidth=0.25,width=1) +
theme_wl_bar_trend() +
scale_fill_manual(values=colours_9_sectors) +
scale_x_continuous(limits=c(1989,max(data_plots$year)+1),
expand = expansion(mult = c(0.01, 0.01)),
breaks=c(1990,2000,2010,max(data_plots$year))) +
theme(axis.title = element_blank()) +
labs(title=paste0(countries[i]),
subtitle=expression("Greenhouse gas emissions inventory (MtCO"[2]*"e/yr)"),
caption="⌂ UNFCCC   ⌂ Tidy GHG inventories   ⌂ CC-BY William F. Lamb")
ggsave(paste0("plots/countries/",countries[i],".png"), plot = p, device = "png", dpi = 300, width = 8, height = 4)
ggsave(paste0("plots/countries/",countries[i],".pdf"), plot = p, device = cairo_pdf, width = 8, height = 4)
ggsave(paste0("plots/countries/",countries[i],".svg"), plot = p, device = "svg", width = 8, height = 4)
data <- data %>%
mutate(units="MtCO2e (GWP100 AR5)") %>%
select(country,iso,sector=sector_tidy,year,units,value)
## Save data
wb <- createWorkbook()
addWorksheet(wb,"info")
addWorksheet(wb,"data")
info = data.frame(a=c("Author","Contact","Data sources","See also"),
b=c("William F. Lamb",
"william.lamb@pik-potsdam.de",
"Lamb, W. F. (2025). Tidy GHG Inventories (1.0) [Data set]. Zenodo. https://doi.org/10.5281/zenodo.14945466",
"https://doi.org/10.5281/zenodo.14512139"))
writeData(wb, sheet = "info",info,colNames = F, rowNames = F)
writeData(wb, sheet = "data",data,colNames = T, rowNames = F)
saveWorkbook(wb,paste0("plots/countries/plot data/",countries[i],".xlsx"),overwrite=T)
}
